{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","ref","useState","latitud","setLatitud","longitud","setLongitud","color","setColor","result","setResult","wrapperRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","navigator","geolocation","getCurrentPosition","pos","crd","coords","latitude","longitude","err","console","warn","code","message","enableHighAccuracy","timeout","maximumAge","className","onClick","myInit","method","a","Request","fetch","response","json","postData","then","data","Object","values","catch","log","name","id","src","e","preventDefault","style","borderColor","borderWidth","borderStyle","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2NAAe,I,0CC4FAA,MApFf,WACE,IA4B2BC,EA5B3B,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACMC,EAAaC,iBAAO,MAkE1B,OA1C2BX,EAvBTU,EAwBhBE,qBAAU,WACR,SAASC,EAAmBC,GACtBd,EAAIe,UAAYf,EAAIe,QAAQC,SAASF,EAAMG,SAC7CV,EAAS,IAIb,OADAW,SAASC,iBAAiB,YAAaN,GAChC,WACLK,SAASE,oBAAoB,YAAaP,MAE3C,CAACb,IAjCNY,qBAAU,WAoBRS,UAAUC,YAAYC,oBAXtB,SAAiBC,GACf,IAAIC,EAAMD,EAAIE,OAEdvB,EAAWsB,EAAIE,UACftB,EAAYoB,EAAIG,cAGlB,SAAeC,GACbC,QAAQC,KAAK,SAAWF,EAAIG,KAAO,MAAQH,EAAII,WAdnC,CACZC,oBAAoB,EACpBC,QAAS,IACTC,WAAY,OA2Dd,sBAAKC,UAAU,MAAf,UAEE,8DACA,wBAAQC,QA/BS,WAGnB,IAAIC,EAAS,CACXC,OAAQ,QAJe,4CAMzB,4BAAAC,EAAA,6DACkB,IAAIC,QAAJ,uEAA4ExC,EAA5E,qBAAgGE,GAAYmC,GAD9H,SAEyBI,MAAM,gEAAD,OAAiEzC,EAAjE,qBAAqFE,GAAY,CAC3HoC,OAAQ,SAHZ,cAEQI,EAFR,yBAKSA,EAASC,QALlB,4CANyB,kEAazBC,GACGC,MAAK,SAAAC,GAEJzC,EAAS0C,OAAOC,OAAOF,EAAKxC,QAAQ,IACpCC,EAAUwC,OAAOC,OAAOF,EAAKxC,QAAQ,OACpC2C,OAAM,SAAAtB,GACPC,QAAQsB,IAAIvB,OAYd,yCACA,wBAAQwB,KAAK,KAAKC,GAAG,MACnBC,IAAI,+CACI,IAATjD,GAAe,qBAAK+B,UAAU,YAAYC,QAX3B,SAACkB,GACnBA,EAAEC,iBACFlD,EAAS,KASS,SACd,sBAAK8B,UAAU,mBAAmBqB,MAAO,CAAEC,YAAarD,EAAOA,MAAOA,EAAOsD,YAAa,OAAQC,YAAa,QAASC,gBAAiB,SAAzI,uDAA2L,uBAAK,uBAAhM,IAAsM,4BAAItD,IAA1M,aC3EOuD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvD,SAASwD,eAAe,SAM1BX,M","file":"static/js/main.6e0a1a73.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect, useRef } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport Plot from 'react-plotly.js';\r\nimport Plotly from 'plotly.js/dist/plotly-cartesian';\r\nimport { geolocated } from \"react-geolocated\";\r\nimport * as d3 from \"d3\";\r\nfunction App() {\r\n  const [latitud, setLatitud] = useState(0)\r\n  const [longitud, setLongitud] = useState(0)\r\n  const [color, setColor] = useState('')\r\n  const [result, setResult] = useState('')\r\n  const wrapperRef = useRef(null);\r\n  useOutsideAlerter(wrapperRef);\r\n  useEffect(() => {\r\n\r\n\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 5000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    function success(pos) {\r\n      var crd = pos.coords;\r\n\r\n      setLatitud(crd.latitude)\r\n      setLongitud(crd.longitude)\r\n    };\r\n\r\n    function error(err) {\r\n      console.warn('ERROR(' + err.code + '): ' + err.message);\r\n    };\r\n\r\n    navigator.geolocation.getCurrentPosition(success, error, options);\r\n  })\r\n  function useOutsideAlerter(ref) {\r\n    useEffect(() => {\r\n      function handleClickOutside(event) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n          setColor('')\r\n        }\r\n      }\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", handleClickOutside);\r\n      };\r\n    }, [ref]);\r\n  }\r\n\r\n\r\n  const handleSubmit = () => {\r\n\r\n\r\n    var myInit = {\r\n      method: 'POST',\r\n    }\r\n    async function postData() {\r\n      var myRequest = new Request(`http://ec2-34-204-101-3.compute-1.amazonaws.com/data?latitud=${latitud}&longitud=${longitud}`, myInit);\r\n      const response = await fetch(`http://ec2-34-204-101-3.compute-1.amazonaws.com/data?latitud=${latitud}&longitud=${longitud}`, {\r\n        method: 'POST'\r\n      })\r\n      return response.json();\r\n    }\r\n    postData()\r\n      .then(data => {\r\n        //alert(data.result); // JSON data parsed by `data.json()` call\r\n        setColor(Object.values(data.result)[1]);\r\n        setResult(Object.values(data.result)[0]);\r\n      }).catch(err=>{\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n  const handleClose = (e) => {\r\n    e.preventDefault()\r\n    setColor('')\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <h4>Calidad del Aire Medellín</h4>\r\n      <button onClick={handleSubmit}>Consulta en tu ubicación</button>\r\n      <iframe name=\"I1\" id=\"if1\"\r\n        src=\"//ec2-34-204-101-3.compute-1.amazonaws.com\"></iframe>\r\n      {color != '' && <div className=\"container\" onClick={handleClose}>\r\n        <div className=\"container-result\" style={{ borderColor: color, color: color, borderWidth: '10px', borderStyle: 'solid', backgroundColor: 'white' }}>La calidad del aire en tu ubicación es:<br/><br/> <b>{result}</b>`</div></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}